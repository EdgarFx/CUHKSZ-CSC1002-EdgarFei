数字华容道是否有解问题：

要判断一个数字华容道是否有解，
首先要判断当前状态量与胜利时的状态量是否相同（即这个状态量要守恒）
关键就在于这个状态量到底是什么

这里要提出一个概念：逆序对
定义：在一个数列a中，存在 ai>aj && i<j，则称ai和aj为一对逆序对

看一下数字华容道中，空格的移动怎样使状态量发生变化：
以n=4为例，将4*4的数字华容道拓展成一个包含数字1-15的数字序列
那么胜利状态即为，1，2，3，4，5，6，7，8，9，10，11，12，13，14，15，0
（空格以0表示）
此时逆序对数为0（计算逆序对不考虑表示空格的那个0）
此时状态量我们定义为0（在这里奇数为1，偶数为0）

现在尝试将空格进行移动，我们可以发现：
1，空格左右移动时不会改变序列的逆序对数
2，当正方形边长为奇数时，每上下移动一行将会增加或减少偶数个逆序对
3，当正方形边长为偶数时，每上下移动一行将会增加或减少奇数个逆序对
（这里不多做证明）

所以上面提到的状态量将涉及下面这两个量
1，当前状态序列的逆序对数的奇偶性（记为S）
2，将空格移动到最后一行所产生的逆序对数的变化量的奇偶性（记为M）

当n为奇数时，因为上下移动对逆序对数的奇偶性没有影响，
所以此时状态量即为S

当n为偶数时，上下移动会对当前状态的逆序对数的奇偶性产生影响
所以此时状态量为S^M，其中^为异或运算，相同为0，不同为1

此时，数字华容道的解的问题就转换成了逆序对数的求解问题
目前用于逆序对求解的算法有：
1. n^2遍历求解
2. 树状数组求解
3. 归并排序求解

当然，根据上面的分析，n*n的正方形数字华容道就能够推广到m行n列的长方形数字华容道
（m,n>=2）
